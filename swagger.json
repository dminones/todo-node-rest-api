{
  "swagger": "2.0",
  "info": {
    "description": "Esta es una API de ejemplo para hacer un todo list",
    "version": "1.0.0",
    "title": "Todo Node Rest API",
    "contact": {
      "email": "dminones@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "todo-node-rest.herokuapp.com",
  "tags": [
    {
      "name": "tasks",
      "description": "Cada task es un todo en la lista"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/tasks": {
      "get": {
        "tags": ["tasks"],
        "summary": "Obtener todas las tareas",
        "description": "",
        "operationId": "getTasks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "Valid response"
          }
        }
      },
      "post": {
        "tags": ["tasks"],
        "summary": "Agregar una nueva tarea",
        "description": "",
        "operationId": "addTask",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Tarea a agregar",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "tags": ["tasks"],
        "summary": "Econtrar tarea por id",
        "description": "Devuelve una tarea",
        "operationId": "getTaksById",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of task",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": ["tasks"],
        "summary": "Actualiza una tarea",
        "description": "",
        "operationId": "updatePetWithForm",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the pet",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the pet",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": ["write:pets", "read:pets"]
          }
        ]
      },
      "delete": {
        "tags": ["tasks"],
        "summary": "Deletes a pet",
        "description": "",
        "operationId": "deletePet",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "petstore_auth": ["write:pets", "read:pets"]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "example": "mi tarea"
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": ["pending", "ongoing", "completed"]
        }
      },
      "xml": {
        "name": "Pet"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
